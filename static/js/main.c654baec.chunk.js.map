{"version":3,"sources":["utils/helpers.js","utils/TimerProvider.js","components/generic/Button/Button.js","utils/MyPropTypes.js","components/generic/Panel/Panel.js","components/generic/DisplayRounds/DisplayRounds.js","components/generic/DisplayTime/DisplayTime.js","components/generic/Input/Input.js","components/generic/TimerButtons/TimerButtons.js","components/documentation/DocumentComponent.js","components/generic/Loading.js","views/DocumentationView.js","utils/hooks.js","components/generic/TimerPanel.js","components/timers/Countdown.js","components/timers/Stopwatch.js","components/timers/XY.js","components/timers/Tabata.js","components/generic/Queue.js","views/TimersView.js","views/AddView.js","App.js","index.js"],"names":["vars","secondsToTime","seconds","hrs","Math","floor","mins","secs","TimerContext","React","createContext","TimerProvider","children","stopwatch","tabata","useState","timerType","setTimerType","running","setRunning","time","setTime","userInput","setUserInput","showingTimer","setShowingTimer","pause","setPause","done","setDone","nRounds","setNRounds","currRound","setCurrRound","restTime","setRestTime","restInput","setRestInput","rest","setRest","showSettings","setShowSettings","timersQ","setTimersQ","timer","setTimer","defaultTimer","config","work","rounds","total","currentTimer","setCurrentTimer","elapsed","setElapsed","remaining","setRemaining","totalWorkout","setTotalWorkout","remainingHMS","setRemainingHMS","elapsedHMS","setElapsedHMS","showTime","timeHMS","handleDisplayTime","nextElapsed","nextRemaining","handleReset","length","handleStart","nextTimer","handleDone","nextTimerIdx","Provider","value","handleDelete","id","val","newTimersQ","filter","item","decrement","handlePause","handleRounds","handleAddTimer","newTimer","newTimers","handleGo","Button","PropTypes","func","string","oneOfType","arrayOf","node","props","type","onClick","text","current","className","defaultProps","Panel","DisplayRounds","useContext","DisplayTime","roundProps","Input","placeholder","handleOnChange","onChange","readOnly","parseInt","parsed","TimerButtons","Start","Pause","Reset","Done","Resume","Add","Go","to","StartQueue","lenEqZero","Wrapper","styled","div","Container","Title","RenderComponent","Documentation","table","DocumentComponent","this","title","component","propDocs","map","doc","prop","description","defaultValue","Component","sizeMapping","small","medium","large","Dot","span","size","color","DotGroup","Loading","console","log","useInterval","callback","delay","savedCallback","useRef","useEffect","setInterval","clearInterval","Timerpanel","input","Countdown","countdown","TimerPanel","Stopwatch","XY","xy","Tabata","Queue","Edit","i","App","Timer","timers","C","state","setState","path","DocumentationView","AddView","TimersView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c654baec.chunk.js","sourcesContent":["// Add helpers here. This is usually code that is just JS and not React code. Example: write a function that\n// calculates number of minutes when passed in seconds. Things of this nature that you don't want to copy/paste\n// everywhere.\n\n// Use constants instead of strings \nexport const vars = {\n    \n    stopwatch: 'Stopwatch',\n    countdown: 'Countdown',\n    tabata: 'Tabata',\n    xy: 'XY',\n    work: 'work', \n    rest: 'rest', \n    pause: 'pause', \n    reset: 'reset',\n    end: 'end',\n}\n\nexport const secondsToTime = (seconds) => {\n    const hrs = Math.floor(seconds / (60 * 60));\n    const mins  =  Math.floor(seconds % (60 * 60) / 60);\n    const secs =  Math.floor(seconds % (60 * 60) % 60); \n    return `${hrs}:${mins}:${secs}`;\n  }\n\n","import { vars } from \"./helpers\";\nimport React, { useState} from 'react';\nimport { secondsToTime } from \"./helpers\";\n\nexport const TimerContext = React.createContext({});\n\nconst TimerProvider = ({ children }) => {\n  const {stopwatch, tabata} = vars; \n  \n  // Moving all states in individual timers to here \n  const [ timerType, setTimerType] = useState(stopwatch); \n  const [ running, setRunning ] = useState(false); \n  const [ time, setTime ] = useState(0); \n  const [ userInput, setUserInput] = useState(0);  \n  const [ showingTimer, setShowingTimer] = useState(\"0:0:0\");\n  const [ pause, setPause] = useState(false);\n  const [ done, setDone] = useState(false);\n  const [ nRounds, setNRounds ] = useState(1);\n  const [ currRound, setCurrRound ] = useState(1);\n  const [ restTime, setRestTime ] = useState(0); \n  const [ restInput, setRestInput] = useState(0);\n  const [ rest, setRest ] = useState(false); \n  const [showSettings, setShowSettings] = useState(true);\n  const [timersQ, setTimersQ] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const defaultTimer = {\n    timerType: \"Add Timers to Queue\",\n    config: {\n      work: 0,\n      rest: 0, \n      rounds: 1, \n    },\n    total: 0, \n  }\n  const [currentTimer, setCurrentTimer] = useState(defaultTimer);\n  const [elapsed, setElapsed] = useState(0);\n  const [remaining, setRemaining] = useState(0);\n  const [totalWorkout , setTotalWorkout] = useState(0);\n  const [remainingHMS, setRemainingHMS] = useState(secondsToTime(remaining));\n  const [elapsedHMS, setElapsedHMS] = useState(secondsToTime(elapsed));\n\n  // Decrementing \n  const decrement = (time, timerType, rest) => {\n    handleDisplayTime(time, timerType, rest);\n    if(timerType === tabata && rest === true){\n      setRestTime(time-1);\n      setRest(true);\n    } else if (rest === false) {\n      setTime(time-1);\n    }\n  }\n\n  const showTime = (time) => {\n    const timeHMS = secondsToTime(time ? time : 0)\n    setShowingTimer(timeHMS);\n  }\n\n  const handleDisplayTime = (time, timerType, rest) => {\n    showTime(time);\n    if(timerType === tabata && rest === true){\n      setRestTime(time);\n    } else if (rest === false ){\n      if (timerType === stopwatch){\n        setTime(time + 1);\n      } else{\n        setTime(time);\n      }\n    }\n    if (running === true){\n      const nextElapsed = elapsed+1 < totalWorkout ? elapsed+1 : totalWorkout;\n      const nextRemaining = remaining-1 > 0 ? remaining-1 : 0;\n      setElapsed(nextElapsed);\n      setElapsedHMS(secondsToTime(nextElapsed));\n      setRemaining(nextRemaining);\n      setRemainingHMS(secondsToTime(nextRemaining));\n    }\n  }\n\n  \n\n  const handleReset = () => {\n    setRunning(false); \n    setPause(false);\n    setDone(false); \n    setRest(false);   \n    setTimer(0);\n    let timer = null; \n    if (timersQ.length === 0){\n      timer = defaultTimer;\n    } else {\n      timer = timersQ[0]\n    }\n    setTimerType(timer.timerType);\n    setRestTime(timer.config.rest);   \n    setCurrentTimer(timer); \n    switch (timer.timerType){\n      case stopwatch:\n        setTime(0);\n        showTime(0);\n        break;\n      default:\n        setTime(timer.config.work);\n        showTime(timer.config.work);\n        setCurrRound(1);  \n    }\n    setElapsed(0);\n    setElapsedHMS(secondsToTime(0));\n    setRemaining(totalWorkout);\n    setRemainingHMS(secondsToTime(totalWorkout));\n  }\n\n  const handleStart = () => {\n    setRunning(true);\n  }\n \n  const handleAddTimer = ()=> {\n    const newTimer = {\n      id: 1000,\n      timerType: timerType,\n      config: {\n        work: userInput,\n        rest: restInput, \n        rounds: nRounds, \n      },\n      total: (userInput+restInput)*nRounds, \n    };\n\n    const newTimers= [...timersQ, newTimer];\n    setTotalWorkout(totalWorkout+newTimer.total);\n    setRemaining(remaining + newTimer.total);\n    setTimersQ(newTimers);\n    setRestInput(0);\n    setNRounds(1);\n  };\n\n  const nextTimer = () => {\n    if (timer+1 === timersQ.length){\n      handleDone();\n    } else {\n      const nextTimerIdx = timer+1;\n      switch (timersQ[nextTimerIdx].timerType){\n        case stopwatch:\n          setTime(0);\n          break;\n        default:\n          setTime(timersQ[nextTimerIdx].config.work);\n          setCurrRound(1);  \n      }\n      setCurrentTimer(timersQ[nextTimerIdx]);\n      setTimerType(timersQ[nextTimerIdx].timerType);\n      setUserInput(timersQ[nextTimerIdx].config.work);\n      setNRounds(timersQ[nextTimerIdx].config.rounds);\n      setRestInput(timersQ[nextTimerIdx].config.rest);\n    }\n    setTimer(timer+1);\n  }\n  \n  const handleGo = () => {\n    handleReset()\n    if (timersQ.length !== 0){\n      const nextTimerIdx = 0; \n      switch (timersQ[nextTimerIdx].timerType){\n        case stopwatch:\n          setTime(0);\n          break;\n        default:\n          setTime(timersQ[nextTimerIdx].config.work);\n          setCurrRound(1);  \n      }\n      setCurrentTimer(timersQ[nextTimerIdx]);\n      setTimerType(timersQ[nextTimerIdx].timerType);\n      setUserInput(timersQ[nextTimerIdx].config.work);\n      setNRounds(timersQ[nextTimerIdx].config.rounds);\n      setRestInput(timersQ[nextTimerIdx].config.rest);\n      \n      if (timer >= 0 ){\n        handleStart();\n      }\n    }\n  }\n\n  const handlePause = () => {\n    setPause(true);\n    setRunning(false); \n  }\n\n  const handleDone = () => {\n    setDone(true);\n    setRunning(false);\n    handleDisplayTime(userInput, timerType, false);\n    setRest(false);\n  }\n  \n  const handleRounds = (currRound, nRounds) => {\n    if (currRound < nRounds){\n      setTime(userInput);\n      setRestTime(restInput);\n      handleDisplayTime(userInput, timerType, false);\n    } else {\n      nextTimer();\n    }\n  }\n\n  const handleDelete = (id) => {\n    const val = totalWorkout - timersQ[id].total\n    setTotalWorkout(val);\n    setRemaining(val);\n    setRemainingHMS(secondsToTime(val));\n    const newTimersQ = timersQ.filter((item) => item.id !== id);\n    setTimersQ(newTimersQ);\n};\n\n\n  return (\n    <TimerContext.Provider\n      value={{ \n        handleDelete,\n        timerType,\n        running,\n        time, \n        setRestTime, \n        restTime, \n        rest,\n        restInput, \n        setRestInput,\n        setRest,\n        nRounds,\n        setNRounds,\n        currRound, \n        setCurrRound,\n        decrement, \n        setTimerType,\n        setTime, \n        handleStart,\n        handlePause, \n        handleDone, \n        handleReset,\n        userInput, \n        setUserInput, \n        handleDisplayTime,\n        showingTimer,\n        setShowingTimer,\n        setRunning,\n        pause, \n        setPause,\n        done,\n        setDone, \n        handleRounds, \n        showSettings,\n        setShowSettings,\n        timersQ, \n        setTimersQ,\n        handleAddTimer,\n        handleGo,\n        currentTimer,\n        nextTimer,\n        timer,\n        elapsed,\n        setElapsed,\n        remaining,\n        setRemaining,\n        showTime, \n        remainingHMS,\n        elapsedHMS,\n      }}>\n        {children}\n    </TimerContext.Provider>);   \n};\n  \nexport default TimerProvider;\n\n\n","import MyPropTypes from \"../../../utils/MyPropTypes\";\nimport './Button.css';\n\nconst Button = (props) => {\n    const {type, onClick, text, current} = props;\n    return (\n      <button className={`Default-button ${type} ${current ? 'current' : ''}`} onClick={onClick}>\n        {text}\n      </button>\n    );\n}\n\nButton.propTypes = {\n  type: MyPropTypes.type,\n  text: MyPropTypes.text,\n  onClick: MyPropTypes.onClick,\n}\nButton.defaultProps = {\n  type: \"\",\n  text: \"Click Here\",\n}\n\nexport default Button;\n","// Its useful to create our own PropTypes so we\n// don't have to repeat the definition everywhere\nimport PropTypes from \"prop-types\";\nconst MyPropTypes = {\n\n    // Functions used throughout \n    onClick: PropTypes.func,\n\n    // Button props \n    type: PropTypes.string,\n    text: PropTypes.string, \n\n    // Input props\n    placeholder: PropTypes.string,\n\n    // Panel props\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n  };\n\nexport default MyPropTypes;","import MyPropTypes from \"../../../utils/MyPropTypes\";\nimport './panel.css';\n\nconst Panel = (props) => {\n  const {type, children} = props;\n    return <div className={`Default-panel ${type}`}>{children}</div>;\n}\n\nPanel.propTypes = {\n  type: MyPropTypes.type,\n  children: MyPropTypes.children,\n}\n\nPanel.defaultProps = {\n  type: \"\",\n}\n\nexport default Panel;\n","import React, {useContext} from \"react\";\nimport { TimerContext } from \"../../../utils/TimerProvider\";\n\nconst DisplayRounds = () => {\n\n    const {currRound, nRounds, rest} = useContext(TimerContext);\n    return (\n        <div className=\"roundsintimer\">\n            <p> Round {currRound} of {nRounds} </p>\n            {rest && <p>REST</p>}\n        </div>\n    )\n}\n\nexport default DisplayRounds;","import Panel from \"../Panel/Panel\";\nimport React, {useContext}  from 'react';\nimport DisplayRounds from \"../DisplayRounds/DisplayRounds\";\nimport { TimerContext } from \"../../../utils/TimerProvider\";\nimport { vars } from \"../../../utils/helpers\";\nimport './DisplayTime.css';\n\nconst DisplayTime = () => {\n\n    const {showingTimer, done, timerType} = useContext(TimerContext);\n    let { roundProps} = false;\n    const {xy, tabata} = vars; \n\n    if (timerType === xy || timerType === tabata){\n        roundProps = true;\n    } \n    return (\n        <Panel>\n            <div className={`Timer ${done ? 'congrats' : ''}`}>\n                {done && <div className=\"donetimer\">DONE</div>}  \n                {roundProps && <DisplayRounds/>}                                \n                <span>{showingTimer}</span>\n            </div> \n            \n        </Panel>\n    );\n\n};\n\nexport default DisplayTime;\n","import { useContext } from 'react';\nimport MyPropTypes from \"../../../utils/MyPropTypes\";\nimport Button from '../Button/Button';\nimport { TimerContext } from '../../../utils/TimerProvider';\nimport './Input.css';\n\nconst Input = (props) => {\n  const {userInput, setUserInput, setNRounds, nRounds, restInput, setRestInput} = useContext(TimerContext);\n  const {placeholder, type, handleOnChange} = props;\n  const inc = () => {\n    if (type === \"work\"){\n      setUserInput(parseInt(userInput)+1);\n    } else if (type === \"rounds\"){\n      setNRounds(parseInt(nRounds)+1);\n    } else if (type === \"rest\"){\n      setRestInput(parseInt(restInput)+1);\n    }\n  };  \n\n  let dec = () => {\n    if (type === \"work\"){\n      const parsed = parseInt(userInput)-1;\n      setUserInput(parsed > 0 ? parsed : 0);\n    } else if (type === \"rounds\"){\n      const parsed = parseInt(nRounds)-1;\n      setNRounds(parsed > 0 ? parsed : 1);\n    } else if (type === \"rest\"){\n      const parsed = parseInt(restInput)-1;\n      setRestInput(parsed > 0 ? parsed : 1);\n    }\n  };\n\n  let val = \"\"; \n  switch (type){\n    case \"work\":\n      val = userInput;\n      break;\n    case \"rounds\":\n      val = nRounds;\n      break;\n    case \"rest\":\n      val = restInput;\n      break;\n    default:\n      break;\n  }\n  return (\n    <div className=\"inputrow\"> \n      <label>{placeholder}</label>\n\n      <div className=\"inputdiv\">\n        <input\n        className={`Default-input`}\n        value={val}\n        type={type}\n        onChange={handleOnChange}\n        readOnly\n        />\n      </div>\n      <div className=\"buttondiv\">\n        <Button type=\"counter\" text=\"+\" onClick={inc}/>\n        <Button type=\"counter\" text=\"-\" onClick={dec}/>\n      </div>\n    </div>\n  );\n}\n\nInput.propTypes = {\n  placeholder: MyPropTypes.placeholder,\n  type: MyPropTypes.type\n}\nInput.defaultProps = {\n  placeholder: \"Enter text\",\n  type: \"\"\n}\n\nexport default Input;\n\n","\nimport { useContext  } from 'react';\nimport { TimerContext } from '../../../utils/TimerProvider.js';\nimport Button from '../Button/Button.js';\nimport './TimerButtons.css'\nimport {Link} from \"react-router-dom\";\n\n\nconst TimerButtons = () => {\n\n  // Get states from context \n  const {running, handleStart, handlePause, pause, handleDone, showSettings, timersQ,\n     handleReset, timerType, done, userInput, handleAddTimer, handleGo} = useContext(TimerContext);\n\n  // Create variables for buttons \n  const Start = <Button \n                  text=\"Start\" \n                  onClick = {() => {\n                    handleStart();\n                  }}\n                  />\n\n  const Pause = <Button \n                  text=\"Pause\" \n                  onClick = {() => {\n                    handlePause();\n                  }}\n                  />\n  const Reset = <Button \n                  text=\"Reset\" \n                  onClick = {() => {\n                    handleReset(timerType, userInput);\n                  }}\n                  />\n  const Done = <Button \n                  text=\"Done\" \n                  onClick = {() => {\n                    handleDone();\n                  }}\n                  />\n  const Resume = <Button \n                  text=\"Resume\" \n                  onClick = {() => {\n                    handleStart();\n                  }}\n                  />\n  const Add = <Button \n                  text=\"Add\" \n                  onClick = {() => {\n                    handleAddTimer();\n                  }}\n                  />\n  const Go = <Link to=\"/\">\n            <Button \n              text=\"Go\"\n              onClick = {() => {\n                handleGo();\n              }}/>\n            </Link>\n  const StartQueue = <Link to=\"/add\">\n                      <Button \n                        type = \"start\"\n                        text=\"Start Queue\"\n                        />\n                      </Link>\n  const lenEqZero = timersQ.length === 0; \n  return (\n      <div className=\"ButtonsPanel\">\n        <div className=\"TimerButton\">\n          {!showSettings && lenEqZero&& StartQueue}\n          {showSettings && Add }\n          {showSettings && Go}\n          {!showSettings && !running && !pause && !done && !lenEqZero && Start}\n          {!showSettings && !running && pause && !done &&  !lenEqZero && Resume}\n          {!showSettings && running && Pause}\n          {!showSettings && running && Done}\n          {!showSettings && !lenEqZero && Reset}\n        </div>\n      </div>\n\n    );\n}\n  \nexport default TimerButtons;\n  ","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border: 1px solid #121212;\n  margin: 20px 0px;\n`;\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 20px;\n  font-size: 1.3rem;\n`;\n\nconst RenderComponent = styled.div`\n  padding: 25px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Documentation = styled.table``;\n\nclass DocumentComponent extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        <Title>{this.props.title}</Title>\n        <Container>\n          <RenderComponent>{this.props.component}</RenderComponent>\n          <Documentation>\n            <tr>\n              <th>Prop</th>\n              <th>Description</th>\n              <th>Type</th>\n              <th>Default value</th>\n            </tr>\n            {this.props.propDocs.map((doc) => {\n              return (\n                <tr>\n                  <td>{doc.prop}</td>\n                  <td>{doc.description}</td>\n                  <td>{doc.type}</td>\n                  <td>\n                    <code>{doc.defaultValue}</code>\n                  </td>\n                </tr>\n              );\n            })}\n          </Documentation>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default DocumentComponent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst primaryColor = \"#ffa2bf\";\n\nconst sizeMapping = {\n  small: 10,\n  medium: 14,\n  large: 20,\n};\n\nconst Container = styled.div`\n  animation: spin 1.5s linear infinite;\n\n  @-moz-keyframes spin {\n    100% {\n      -moz-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @keyframes spin {\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nconst Dot = styled.span`\n  display: block;\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  background-color: ${(props) => props.color};\n  border-radius: 100%;\n  transform: scale(0.75);\n  transform-origin: 50% 50%;\n  opacity: 0.3;\n  animation: wobble 1s ease-in-out infinite;\n\n  @keyframes wobble {\n    0% {\n      border-radius: 25%;\n    }\n    100% {\n      border-radius: 100%;\n    }\n  }\n`;\n\nconst DotGroup = styled.div`\n  display: flex;\n`;\n\nclass Loading extends React.Component {\n  render() {\n    const size = sizeMapping[this.props.size];\n    const { color } = this.props;\n\n    return (\n      <Container>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n        <DotGroup>\n          <Dot size={size} color={color} />\n          <Dot size={size} color={color} />\n        </DotGroup>\n      </Container>\n    );\n  }\n}\n\nLoading.propTypes = {\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  color: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  size: \"medium\",\n  color: primaryColor,\n};\n\nexport default Loading;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/generic/Button/Button\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport DisplayRound from \"../components/generic/DisplayRounds/DisplayRounds\";\nimport DisplayTime from \"../components/generic/DisplayTime/DisplayTime\";\nimport Input from \"../components/generic/Input/Input\";\nimport TimerButtons from \"../components/generic/TimerButtons/TimerButtons\";\nimport DocumentComponent from \"../components/documentation/DocumentComponent\";\nimport Loading from \"../components/generic/Loading\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst Title = styled.div`\n  font-size: 2rem;\n`;\n\nclass Documentation extends React.Component {\n  render() {\n    return (\n      <Container>\n        <div>\n          <Title>Documentation</Title>\n          <DocumentComponent\n            title=\"Loading spinner \"\n            component={<Loading />}\n            propDocs={[\n              {\n                prop: \"size\",\n                description: \"Changes the size of the loading spinner\",\n                type: \"string\",\n                defaultValue: \"medium\",\n              },\n            ]}\n          />\n          <DocumentComponent\n          title=\"Button \"\n          component={<Button onClick={() => console.log(\"Documentation - button clicked\")} />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Flag to identify increment and decrement buttons from other ones\",\n              type: \"string\",\n              defaultValue: \"''\",\n            },\n            {\n              prop: \"text\",\n              description: \"Text to be placed on button\",\n              type: \"string\",\n              defaultValue: \"Click Here\",\n            },\n            {\n              prop: \"onClick\",\n              description: \"Actions to be performed when button is clicked\",\n              type: \"function\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"current\",\n              description: \"Marks the timer that is being set\",\n              type: \"bool\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayRound \"\n          component={<DisplayRound/>}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Just conditionally rendering the rounds from a different component. \\n It uses the current round, total number or rounds, and rest boolean variabel from context.\",\n              type: \"div\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"DisplayTime \"\n          component={<DisplayTime/>}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Display the number either ticking up or down with the information about the rounds of the timer and other visuals.\",\n              type: \"\",\n              defaultValue: \"\",\n            }\n          ]}\n        />\n        <DocumentComponent\n          title=\"Input \"\n          component={<Input />}\n          propDocs={[\n            {\n              prop: \"type\",\n              description: \"Help identify type of input (rest, work, rounds)\",\n              type: \"string\",\n              defaultValue: \"the props in context default all inputs to either 0 or 1\",\n            },\n            {\n              prop: \"placeholder\",\n              description: \"Placeholder for the input\",\n              type: \"string\",\n              defaultValue: \"Name of input field\"\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel \"\n          component={<Panel />}\n          propDocs={[\n            {        \n              prop: \"children\",\n              description: \"Other divs to render inside of the panel\",\n              type: \"div\",\n              defaultValue: \"undefined\",\n            },\n            {\n              prop: \"type\",\n              description: \"Help identify different panels on page to change their CSS accordingly\",\n              type: \"string\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n        <DocumentComponent\n          title=\"Panel \"\n          component={<TimerButtons />}\n          propDocs={[\n            {        \n              prop: \"none\",\n              description: \"Uses everything it needs from context - it has all the timer controls (Start, Pause, Reset, resume).\",\n              type: \"\",\n              defaultValue: \"\",\n            },\n          ]}\n        />\n\n        \n\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default Documentation;\n","// Code from lecture notes \nimport { useEffect, useRef} from 'react';\n\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef();\n  \n    // Remember the latest callback.\n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    // Set up the interval.\n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }","import { useContext } from \"react\";\nimport { TimerContext } from \"../../utils/TimerProvider\";\nimport TimerButtons from \"./TimerButtons/TimerButtons\";\nimport DisplayTime from \"./DisplayTime/DisplayTime\";\nimport '../timers/Timers.css'\n\n\nconst Timerpanel = (props) => {\n  const {input} = props;\n  const {showSettings} = useContext(TimerContext);\n\n    return(\n      <div className=\"outerPanel\">\n        <div className=\"flip-card\">\n          <div className=\"flip-card-inner\">\n            {!showSettings && \n                <div className=\"DisplayTime\">\n                    <DisplayTime/>\n                </div>         \n            }\n            {showSettings && \n                <div className=\"inputs\">\n                  {input}\n                </div>\n            }\n          </div> \n      </div>\n      <TimerButtons/>     \n      </div>\n    );  \n};\n\nexport default Timerpanel;\n","// import React from \"react\";\nimport React, { useContext, useEffect } from 'react';\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\nconst Countdown = () => {\n\n  // Get states from context \n  const {time, running,\n     setTimerType, decrement, nextTimer,\n      userInput, timerType} = useContext(TimerContext);\n  const {countdown} = vars;\n\n  // Countdown functionality \n  useEffect(() => {\n    setTimerType(countdown);\n  }, [countdown, setTimerType]);\n\n  useInterval(() => {\n    if (time > 0 && running === true ){\n      if (time === userInput){\n        decrement(time-1, timerType, false);\n      }else{\n        decrement(time, timerType, false);\n      }\n    } else if (time === 0 && running === true ){\n      nextTimer();\n    }\n  }, 1000);   \n  \n  return (\n      \n      <TimerPanel\n      input={<Input\n              type=\"work\"\n              value={time}\n              placeholder=\"Work Time (s)\"\n              />}\n      >\n      </TimerPanel>\n  );\n}\n\nexport default Countdown;\n","import React, { useContext, useEffect } from 'react';\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\nconst Stopwatch = () => {\n\n  // Get states and variables needed\n  const {time, userInput, running, setTimerType, timerType, nextTimer, \n     handleDisplayTime} = useContext(TimerContext);\n  const {stopwatch} = vars;\n  \n  useEffect(() => {\n    setTimerType(stopwatch);\n  }, [setTimerType, stopwatch]);\n\n  useInterval(() => {\n    if (time <= userInput && running === true){\n      if (time === 0){\n        handleDisplayTime(time+1, timerType, false);\n      }else{\n        handleDisplayTime(time, timerType, false);\n      }\n    } else if ((time > userInput && running === true )|| (userInput === 0 && running === true )){\n      nextTimer();\n    } \n  }, 1000);   \n  \n\n  return (\n      <TimerPanel\n      input={<Input\n        type=\"work\"\n        placeholder=\"End Time (s)\"\n        value={time}\n        />}\n      >\n      </TimerPanel>\n  );\n\n}\n\nexport default Stopwatch;\n","import React, { useContext, useEffect }  from \"react\";\nimport { useInterval } from '../../utils/hooks';\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport './Timers.css'\n\nconst XY = () => {\n\n  // Get states and variables needed\n  const {time, running, nRounds, currRound, setTimerType, setCurrRound, showTime,\n     decrement, handleRounds, userInput, timerType} = useContext(TimerContext);\n  const {xy} = vars;\n  \n  useEffect(() => {\n    setTimerType(xy);\n  }, [setTimerType, xy]);\n\n  useInterval(() => {\n    if (time > 0 && running === true){\n      showTime(time);\n      if (time === userInput && currRound === 1){\n        decrement(time-1, timerType, false);\n      }else{\n        decrement(time, timerType, false);\n      }\n    } else if (time === 0 && running === true){\n      handleRounds(currRound, nRounds); \n      if (currRound !== nRounds){\n        setCurrRound(currRound+1);\n      }  \n    } \n  }, 1000);   \n \n  return (\n      \n      <TimerPanel\n      input={<>\n        <Input\n          type=\"work\"\n          placeholder=\"Time per Round (s)\"\n          value={time}\n\n        />\n        <Input\n          type=\"rounds\"\n          placeholder=\"Rounds (s) \"\n          value={nRounds}\n        />\n        </>}\n      >\n      </TimerPanel>\n  );\n};\n\nexport default XY;\n","import React, { useContext, useEffect }  from \"react\";\nimport Input from \"../generic/Input/Input\";\nimport TimerPanel from \"../generic/TimerPanel\";\nimport { vars } from '../../utils/helpers';\nimport { TimerContext } from '../../utils/TimerProvider';\nimport { useInterval } from '../../utils/hooks';\n\nimport './Timers.css'\n\nconst Tabata = () => {\n  \n    // Get states and variables needed\n    const {time, running, nRounds, currRound, setTimerType, restTime, setCurrRound,\n      decrement, handleRounds, userInput, timerType, setRest} = useContext(TimerContext);\n    const {tabata} = vars;\n  \n  useEffect(() => {\n    setTimerType(tabata);\n  }, [setTimerType, tabata]);\n\n  useInterval(() => {\n     if (time > 0 && running === true){\n      setRest(false);\n      if (time === userInput && currRound === 1){\n        decrement(time-1, timerType, false);\n      }else{\n        decrement(time, timerType, false);\n      }\n    } else if (restTime !== 0 && running === true){\n      decrement(restTime, timerType, true);\n    } else if (time === 0 && running === true){\n      handleRounds(currRound, nRounds); \n      if (currRound !== nRounds){\n        setCurrRound(currRound+1);\n      }  \n    } \n  }, 1000);   \n  \n  return (\n    <>\n    <TimerPanel\n      input={<>\n        <Input\n          placeholder=\"Work Time (s)\"\n          type=\"work\"\n          value={time}\n        />\n        <Input\n          placeholder=\"Rest Time (s)\"\n          type=\"rest\"\n          value={restTime}\n        />              \n        <Input\n          placeholder=\"Rounds (s)\"\n          type=\"rounds\"\n          value={nRounds}\n        />\n      </>\n      }\n      >\n    </TimerPanel>\n    </>\n  );\n}\n\nexport default Tabata;\n","import React, {useContext, useEffect } from \"react\";\nimport Panel from \"./Panel/Panel\";\nimport Button from \"./Button/Button\";\nimport { TimerContext } from \"../../utils/TimerProvider\";\nimport {Link} from \"react-router-dom\";\n\nconst Queue = () => {\n    const {showSettings, timersQ, running, timer, handleDelete} = useContext(TimerContext);\n    \n    const Edit = <Link to=\"/add\">\n                  <Button \n                  type=\"edit\" \n                  text = 'Edit'\n                  /> </Link>\n    useEffect(() => {\n      }, [timersQ, timer]);\n\n    return (\n        <Panel type=\"queue\">\n            <Panel type=\"queuelist\">\n                <h2> Queue </h2>\n                {!showSettings && !running && timersQ.length > 0 && Edit}\n                {timersQ.map((timer, i) => {\n                    timer.id = i;\n                    return(\n                    <Panel type=\"queueTimer\" key = {i}>\n                        {timer.timerType} - {timer.total}s \n                        {showSettings &&  <Button \n                            type=\"Delete\" \n                            text=\"X\" \n                            onClick = {() => {handleDelete(timer.id);}}\n                        />}\n                    </Panel>\n                )})} \n            </Panel>\n      </Panel>\n    );\n}\n\nexport default Queue;\n","import React, { useContext, useEffect } from \"react\";\nimport Countdown from \"../components/timers/Countdown\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport { TimerContext } from \"../utils/TimerProvider\";\nimport Queue from \"../components/generic/Queue\";\nimport {vars} from \"../utils/helpers\";\n\nfunction App() {\n\n  const {showSettings, setShowSettings, currentTimer, timerType,\n    elapsedHMS, remainingHMS} = useContext(TimerContext);\n  const {stopwatch, countdown, xy, tabata} = vars; \n\n  useEffect(() => {\n    setShowSettings(false);\n  }, [ setShowSettings, timerType]);\n\n  const Timer = () => {\n    const {timerType} = currentTimer;\n    switch (timerType){\n      case countdown:\n        return <Countdown/>;\n      case xy:\n        return <XY/>;\n      case tabata:\n        return <Tabata/>;\n      case stopwatch:\n        return <Stopwatch/>;\n      default: \n        return <Stopwatch/>;\n  }}\n\n\n  return (  \n  \n    <Panel type=\"outer\">\n      <Panel type=\"timerslist\">\n        <Panel type=\"elapsed\"> \n        <p className=\"hmsg\">{elapsedHMS}</p> <p className='Timertitle'> - {currentTimer.timerType} - </p> \n        <p className=\"hmsr\">{remainingHMS}</p>\n        </Panel>  \n      </Panel>\n        <Queue showSettings={showSettings}/>\n      <Timer />\n   </Panel>   \n  );\n}\n\nexport default App;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport Stopwatch from \"../components/timers/Stopwatch\";\nimport Countdown from \"../components/timers/Countdown\";\nimport XY from \"../components/timers/XY\";\nimport Tabata from \"../components/timers/Tabata\";\nimport Panel from \"../components/generic/Panel/Panel\";\nimport Button from \"../components/generic/Button/Button\";\nimport { TimerContext } from \"../utils/TimerProvider\";\nimport Queue from \"../components/generic/Queue\";\nfunction App() {\n\n  const timers = [\n    { title: \"Stopwatch\", C: <Stopwatch /> },\n    { title: \"Countdown\", C: <Countdown /> },\n    { title: \"XY\", C: <XY /> },\n    { title: \"Tabata\", C: <Tabata /> },\n  ];\n  const {showSettings, setShowSettings} = useContext(TimerContext);\n\n  const [state, setState] = useState(0);\n  useEffect(() => {\n    setShowSettings(true);\n  }, [setShowSettings]);\n\n  return (  \n  \n    <Panel type=\"outer\">\n      <Panel type=\"timerslist\">\n        {timers.map((timer, i) => (\n            <Button \n            key = {i}\n            onClick={() => {\n              setState(i);\n            }}\n            current={i === state}\n            type=\"list\"\n            text={timer.title}\n            /> \n          ))}  \n      </Panel>\n      <Queue showSettings={showSettings}/>\n      {timers[state].C}\n   </Panel>   \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport TimerProvider from \"./utils/TimerProvider\";\nimport DocumentationView from \"./views/DocumentationView\";\nimport TimersView from \"./views/TimersView\";\nimport AddView from \"./views/AddView\";\n\nconst Container = styled.div`\n  background: #f0f6fb;\n  height: 100vh;\n  overflow: auto;\n`;\n\nfunction App() {\n  return (\n    <TimerProvider>\n        <Container>\n        <Router>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Timers</Link>\n              </li>\n              <li>\n                <Link to=\"/docs\">Documentation</Link>\n              </li>\n              <li>\n                <Link to=\"/add\">Add</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route path=\"/docs\">\n              <DocumentationView />\n            </Route>\n            <Route path=\"/add\">\n              <AddView/>\n            </Route>\n            <Route path=\"/\">\n              <TimersView/>\n            </Route>\n          </Switch>\n        </Router>\n      </Container>\n    </TimerProvider>\n    \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}